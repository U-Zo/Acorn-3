{"version":3,"sources":["components/common/Responsive.js","components/common/WhiteBoard.js","components/main/Main.js","modules/loading.js","lib/createRequestSaga.js","lib/api/client.js","lib/api/auth.js","modules/user.js","components/common/Button.js","components/common/Header.js","containers/common/HeaderContainer.js","pages/MainPage.js","components/auth/AuthTemplate.js","modules/auth.js","components/auth/AuthForm.js","containers/auth/LoginForm.js","pages/LoginPage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["ResponsiveBlock","styled","div","Responsive","children","props","WhiteBoardTop","WhiteBoardBlock","WhiteBoard","title","MainBlock","Board","Main","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","payload","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","action","put","call","response","data","meta","error","client","axios","create","logout","post","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","user","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","takeLatest","checkError","buttonStyle","css","fullWidth","StyledButton","button","StyledLink","Link","Button","to","HeaderBlock","HeaderWrapper","SpaceBlock","UserInfo","Header","onLogout","className","username","onClick","HeaderContainer","useSelector","dispatch","useDispatch","MainPage","AuthTemplateBlock","WhiteBlock","AuthTemplate","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","initializeForm","register","password","login","registerSaga","loginSaga","initialState","passwordConfirm","auth","authError","typeMap","AuthFormBlock","StyledInput","input","ButtonWithMargin","ErrorMessage","Footer","AuthForm","onChange","onSubmit","text","autoComplete","name","placeholder","withRouter","history","useState","setError","useEffect","status","push","setItem","JSON","stringify","target","preventDefault","LoginPage","includes","RegisterPage","App","component","path","exact","Boolean","window","location","hostname","match","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cb04d919.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  width: 1180px;\r\n  margin: 0 auto;\r\n  \r\n  @media (max-width: 1180px) {\r\n    width: 1024px;\r\n  }\r\n  \r\n  @media (max-width: 1024px) {\r\n    width: 768px;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...props }) => {\r\n  // style, className 등 props 전달하기 위해 ...props를 이용\r\n  return <ResponsiveBlock {...props}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst WhiteBoardTop = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #0c4ccb;\r\n  height: 40px;\r\n  border-radius: 10px 10px 0 0;\r\n  color: #fff;\r\n  box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nconst WhiteBoardBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n  background: #fff;\r\n  border-radius: 0 0 10px 10px;\r\n  box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nconst WhiteBoard = ({ title, children, ...props }) => {\r\n  return (\r\n      <div {...props}>\r\n        <WhiteBoardTop>\r\n          {title}\r\n        </WhiteBoardTop>\r\n        <WhiteBoardBlock>\r\n          {children}\r\n        </WhiteBoardBlock>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default WhiteBoard;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport WhiteBoard from '../common/WhiteBoard';\r\n\r\nconst MainBlock = styled(Responsive)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Board = styled(WhiteBoard)`\r\n  width: 30%;\r\n  margin-top: 3.5rem;\r\n`;\r\n\r\nconst Main = () => {\r\n  return (\r\n      <MainBlock>\r\n        <Board title=\"Lorem ipsum\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et\r\n          dolore magna aliqua. Ut enim ad minim veniam\r\n        </Board>\r\n        <Board title=\"Lorem ipsum\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et\r\n          dolore magna aliqua. Ut enim ad minim veniam\r\n        </Board>\r\n        <Board title=\"Lorem ipsum\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et\r\n          dolore magna aliqua. Ut enim ad minim veniam\r\n        </Board>\r\n        <Board title=\"Lorem ipsum\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et\r\n          dolore magna aliqua. Ut enim ad minim veniam\r\n        </Board>\r\n        <Board title=\"Lorem ipsum\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et\r\n          dolore magna aliqua. Ut enim ad minim veniam\r\n        </Board>\r\n        <Board title=\"Lorem ipsum\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et\r\n          dolore magna aliqua. Ut enim ad minim veniam\r\n        </Board>\r\n      </MainBlock>\r\n  );\r\n};\r\n\r\nexport default Main;","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n    START_LOADING,\r\n    (requestType) => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n    FINISH_LOADING,\r\n    (requestType) => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n    {\r\n      [START_LOADING]: (state, { payload }) => ({\r\n        ...state,\r\n        [payload]: true,\r\n      }),\r\n      [FINISH_LOADING]: (state, { payload }) => ({\r\n        ...state,\r\n        [payload]: false,\r\n      }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default loading;\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../modules/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  // action can be parameter, if action have payload values\r\n  return function* (action) {\r\n    yield put(startLoading(type)); // dispatch startLoading action to saga\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n        meta: response,\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: e,\r\n        error: true,\r\n      });\r\n    }\r\n\r\n    yield put(finishLoading(type)); // dispatch finishLoading action to saga\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;","import client from './client';\r\n\r\n// login\r\nexport const login = ({ username, password }) =>\r\n    client.post('/api/auth/login', { username, password });\r\n\r\n// register\r\nexport const register = ({ username, password }) =>\r\n    client.post('/api/auth/register', { username, password });\r\n\r\n// check login state\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\n// logout\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n    'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, (user) => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n      [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n        ...state,\r\n        user,\r\n      }),\r\n      [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n        ...state,\r\n        user,\r\n        checkError: null,\r\n      }),\r\n      [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n        ...state,\r\n        user: null,\r\n        checkError: error,\r\n      }),\r\n      [LOGOUT]: state => ({\r\n        ...state,\r\n        user: null,\r\n      }),\r\n    },\r\n    initialState,\r\n);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n  padding: 0.5rem 1rem;\r\n  color: #fff;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  background-color: #3D79F2;\r\n  transition: background-color .3s ease;\r\n  font-family: inherit;\r\n  \r\n  &:hover {\r\n    background-color: #5e8de9;\r\n  }\r\n  \r\n  ${props =>\r\n    props.fullWidth &&\r\n    css`\r\n      width: 100%;\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = props => {\r\n  return props.to ? (\r\n      <StyledLink {...props} />\r\n  ) : (\r\n      <StyledButton {...props} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\nconst HeaderBlock = styled.div`\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 1rem;\r\n`;\r\n\r\nconst HeaderWrapper = styled(Responsive)`\r\n  display: flex;\r\n  background: #fff;\r\n  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.2);\r\n  border-radius: 13px;\r\n  height: 4rem;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #0c4ccb;\r\n  overflow: hidden;\r\n  \r\n  .logo {\r\n    display: flex;\r\n    font-weight: bold;\r\n    font-size: 1.125rem;\r\n    padding: 0 1rem;\r\n    background: #0c4ccb;\r\n    color: #fff;\r\n    height: 100%;\r\n    align-items: center;\r\n  }\r\n  \r\n  .right {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst SpaceBlock = styled.div`\r\n  height: 4rem;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Header = ({ user, onLogout }) => {\r\n  return (\r\n      <>\r\n        <HeaderBlock>\r\n          <HeaderWrapper>\r\n            <Link to=\"/\" className=\"logo\">\r\n              MERN\r\n            </Link>\r\n            {user ? (\r\n                <div className=\"right\">\r\n                  <UserInfo>{user.username}</UserInfo>\r\n                  <Button onClick={onLogout}>로그아웃</Button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"right\">\r\n                  <Button to=\"/login\">로그인</Button>\r\n                </div>\r\n            )}\r\n          </HeaderWrapper>\r\n        </HeaderBlock>\r\n        <SpaceBlock />\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../modules/user';\r\nimport Header from '../../components/common/Header';\r\n\r\nconst HeaderContainer = () => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  const dispatch = useDispatch();\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return <Header user={user} onLogout={onLogout} />;\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import React from 'react';\r\nimport Main from '../components/main/Main';\r\nimport HeaderContainer from '../containers/common/HeaderContainer';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n      <>\r\n        <HeaderContainer />\r\n        <Main />\r\n      </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: #3D79F2;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst WhiteBlock = styled.div`\r\n  background: #fff;\r\n  padding: 3rem 5rem;\r\n  border-radius: 10px;  \r\n  width: 500px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.25);\r\n  \r\n  .logo-area {\r\n    display: block;\r\n    padding-bottom: 2rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    letter-spacing: 2px;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n      <AuthTemplateBlock>\r\n        <WhiteBlock>\r\n          <div className=\"logo-area\">\r\n            <Link to=\"/\">MERN</Link>\r\n          </div>\r\n          {children}\r\n        </WhiteBlock>\r\n      </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD'; // change_field action\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // initialize_form action\r\n\r\n// register actions\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n    'auth/REGISTER',\r\n);\r\n\r\n// login actions\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n    'auth/LOGIN',\r\n);\r\n\r\n// create action\r\nexport const changeField = createAction(\r\n    CHANGE_FIELD,\r\n    // define payload values\r\n    ({ form, key, value }) => ({\r\n      form,\r\n      key,\r\n      value,\r\n    }),\r\n);\r\n\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\n\r\nexport const register = createAction(REGISTER, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\n\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\n\r\n// create saga\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  auth: null,\r\n  authError: null,\r\n};\r\n\r\nconst auth = handleActions(\r\n    {\r\n      [CHANGE_FIELD]: (state, { payload: { form, key, value } }) => ({\r\n        ...state,\r\n        // form: register or login\r\n        [form]: {\r\n          ...state[form],\r\n          [key]: value, // key: username or password or passwordConfirm\r\n        },\r\n      }),\r\n      [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n        ...state,\r\n        [form]: initialState[form], // reset register or login to initialize value\r\n      }),\r\n      [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\r\n        ...state,\r\n        auth,\r\n        authError: null,\r\n      }),\r\n      [REGISTER_FAILURE]: (state, { payload: error }) => ({\r\n        ...state,\r\n        authError: error,\r\n      }),\r\n      [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n        ...state,\r\n        auth,\r\n        authError: null,\r\n      }),\r\n      [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n        ...state,\r\n        authError: error,\r\n      }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default auth;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst typeMap = {\r\n  login: '로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    color: #2b2b2b;\r\n    text-align: center;\r\n    margin-bottom: 1.5rem;\r\n    font-weight: bold;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  width: 100%;\r\n  transition: all ease-in 0.2s;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  font-family: inherit;\r\n  &:focus {\r\n    border-bottom: 1px solid #828282;\r\n  }\r\n  & + & {\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nconst ButtonWithMargin = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: end;\r\n  \r\n  a {\r\n    color: #3D79F2;\r\n    text-decoration: underline;\r\n    \r\n    &:hover {\r\n      color: #2665ef;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AuthForm = ({ type, form, onChange, onSubmit, error }) => {\r\n  const text = typeMap[type];\r\n\r\n  return (\r\n      <AuthFormBlock>\r\n        <h3>{text}</h3>\r\n        <form onSubmit={onSubmit}>\r\n          <StyledInput\r\n              autoComplete=\"username\"\r\n              name=\"username\"\r\n              placeholder=\"아이디\"\r\n              onChange={onChange}\r\n              value={form.username}\r\n          />\r\n          <StyledInput\r\n              autoComplete=\"new-password\"\r\n              name=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              type=\"password\"\r\n              onChange={onChange}\r\n              value={form.password}\r\n          />\r\n          {type === 'register' && (\r\n              <StyledInput\r\n                  autoComplete=\"new-password\"\r\n                  name=\"passwordConfirm\"\r\n                  placeholder=\"비밀번호 확인\"\r\n                  type=\"password\"\r\n                  onChange={onChange}\r\n                  value={form.passwordConfirm}\r\n              />\r\n          )}\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          <ButtonWithMargin fullWidth>{text}</ButtonWithMargin>\r\n        </form>\r\n        <Footer>\r\n          {type === 'login' ? (\r\n              <Link to=\"/register\">회원가입</Link>\r\n          ) : (\r\n              <Link to=\"/login\">로그인</Link>\r\n          )}\r\n        </Footer>\r\n      </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, login } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { check } from '../../modules/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    dispatch(\r\n        changeField({\r\n          form: 'login',\r\n          key: name,\r\n          value,\r\n        }),\r\n    );\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  // form 초기화\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    // Login failure\r\n    if (authError) {\r\n      if (authError.response.status === 500) {\r\n        setError('서버에 오류가 발생했습니다.');\r\n      } else {\r\n        setError('아이디와 비밀번호를 확인해주세요.');\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Login success\r\n    if (auth) {\r\n      console.log(auth);\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/');\r\n      try {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {\r\n        console.log('localStorage is not working');\r\n      }\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n      <AuthForm\r\n          type=\"login\"\r\n          form={form}\r\n          onChange={onChange}\r\n          onSubmit={onSubmit}\r\n          error={error}\r\n      />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport LoginForm from '../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n      <AuthTemplate>\r\n        <LoginForm />\r\n      </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, register } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { check } from '../../modules/user';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.register,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    dispatch(\r\n        changeField({\r\n          form: 'register',\r\n          key: name,\r\n          value,\r\n        }),\r\n    );\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password, passwordConfirm } = form;\r\n\r\n    // isEmpty\r\n    if ([username, password, passwordConfirm].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n\r\n    // passwordConfirm error\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      dispatch(changeField({ form: 'register', key: 'password', value: '' }));\r\n      dispatch(\r\n          changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch(register({ username, password }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      // exist user\r\n      if (authError.response.status === 409) {\r\n        setError('이미 존재하는 계정입니다.');\r\n        return;\r\n      }\r\n\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/');\r\n      try {\r\n        // Add user information to localStorage\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {\r\n        console.log('localStorage is not working');\r\n      }\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n      <AuthForm\r\n          type=\"register\"\r\n          form={form}\r\n          onChange={onChange}\r\n          onSubmit={onSubmit}\r\n          error={error}\r\n      />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport RegisterForm from '../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n      <AuthTemplate>\r\n        <RegisterForm />\r\n      </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MainPage from './pages/MainPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\n\r\nconst App = () => {\r\n  return (\r\n      <>\r\n        <Route component={MainPage} path=\"/\" exact />\r\n        <Route component={LoginPage} path=\"/login/\" />\r\n        <Route component={RegisterPage} path=\"/register/\" />\r\n      </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker.register(swUrl).then(registration => {\r\n    registration.onupdatefound = () => {\r\n      const installingWorker = registration.installing;\r\n      if (installingWorker == null) {\r\n        return;\r\n      }\r\n      installingWorker.onstatechange = () => {\r\n        if (installingWorker.state === 'installed') {\r\n          if (navigator.serviceWorker.controller) {\r\n            // At this point, the updated precached content has been fetched,\r\n            // but the previous service worker will still serve the older\r\n            // content until all client tabs are closed.\r\n            console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n            );\r\n\r\n            // Execute callback\r\n            if (config && config.onUpdate) {\r\n              config.onUpdate(registration);\r\n            }\r\n          } else {\r\n            // At this point, everything has been precached.\r\n            // It's the perfect time to display a\r\n            // \"Content is cached for offline use.\" message.\r\n            console.log('Content is cached for offline use.');\r\n\r\n            // Execute callback\r\n            if (config && config.onSuccess) {\r\n              config.onSuccess(registration);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    };\r\n  }).catch(error => {\r\n    console.error('Error during service worker registration:', error);\r\n  });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  }).then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    const contentType = response.headers.get('content-type');\r\n    if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n    ) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister().then(() => {\r\n          window.location.reload();\r\n        });\r\n      });\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl, config);\r\n    }\r\n  }).catch(() => {\r\n    console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n    );\r\n  });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    }).catch(error => {\r\n      console.error(error.message);\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport { all } from 'redux-saga/effects';\r\n\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer, { rootSaga } from './modules';\r\nimport { tempSetUser, check } from './modules/user';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nfunction loadUser() {\r\n  try {\r\n    const user = localStorage.getItem('user');\r\n    if (!user) return; // not login state\r\n\r\n    store.dispatch(tempSetUser(user));\r\n    store.dispatch(check());\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}